// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NokoodAssignment.Persistence.DatabaseContext;

#nullable disable

namespace NokoodAssignment.Persistence.Migrations
{
    [DbContext(typeof(NokoodDBContext))]
    [Migration("20230612101736_RoleSeedsAdded")]
    partial class RoleSeedsAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "3ae088b6-58b3-40af-bd1c-ca7394d66b62",
                            Name = "Admins"
                        },
                        new
                        {
                            Id = "2ea7675a-a749-41eb-891c-e6fd98c306db",
                            Name = "AppUser"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("NokoodAssignment.Domain.Entities.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TripId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("AppTB_Reservation", (string)null);
                });

            modelBuilder.Entity("NokoodAssignment.Domain.Entities.Trip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("AppTB_Trip", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d967eba4-62fb-e42e-dfe4-6577a44f4580"),
                            CityName = "West Beth",
                            Content = "front-end Money Market Account Central Small Concrete Computer Malagasy Ariary Operations Armenia Italy deploy leading edge Tasty Rubber Pizza cyan Credit Card Account Licensed Plastic Shirt Home Loan Account Shoes Utah Jewelery, Beauty & Home Costa Rican Colon reboot Handmade Granite Keyboard District one-to-one Handcrafted Cotton Keyboard bypassing Consultant Mississippi Soft River CSS COM Savings Account eyeballs instruction set online Borders North Dakota Electronics Roads Front-line Rustic Concrete Ball methodical Officer revolutionize orange Intelligent Steel Salad back up Metal mint green Investment Account Customer invoice deposit grow Bridge Awesome Frozen Bacon Metrics Avon Tasty Frozen Hat Investment Account",
                            CreationDate = new DateTime(2023, 6, 12, 1, 28, 33, 980, DateTimeKind.Local).AddTicks(2214),
                            CreatorId = new Guid("78a7570f-3ce5-48ba-9461-80283ed1d94d"),
                            ImageUrl = "http://lorempixel.com/640/480/abstract",
                            Name = "Frozen",
                            Price = 427.42000000000002
                        },
                        new
                        {
                            Id = new Guid("7f750b77-8783-8ef5-f22c-a1e9fcc15904"),
                            CityName = "Bernhardburgh",
                            Content = "quantify Assistant reciprocal Forge portals Lebanese Pound Prairie Home Loan Account turn-key Ford Tennessee action-items Georgia back up Cotton De-engineered redefine platforms Internal Associate Sleek programming backing up programming engineer feed 24/7 withdrawal core product deposit sky blue Integration Well microchip Planner Granite AGP Corporate JBOD Practical Plastic Towels withdrawal Open-source Configuration Plastic Mexican Peso quantify Fresh Handmade Rand Operations Grocery copying indexing Fantastic Cotton Keyboard cross-platform HTTP Nigeria generate wireless",
                            CreationDate = new DateTime(2023, 6, 11, 13, 48, 51, 889, DateTimeKind.Local).AddTicks(669),
                            CreatorId = new Guid("78a7570f-3ce5-48ba-9461-80283ed1d94d"),
                            ImageUrl = "http://lorempixel.com/640/480/abstract",
                            Name = "Rubber",
                            Price = 614.27999999999997
                        },
                        new
                        {
                            Id = new Guid("6f60729f-9c06-fc8b-8f58-9091eb9248b1"),
                            CityName = "New Garth",
                            Content = "tan human-resource service-desk Georgia Practical Metal Hat quantifying Cambridgeshire Checking Account Utah Sharable real-time Internal Games Liaison protocol Plain partnerships benchmark navigating static Awesome Granite Chips Security program Branch Devolved Bedfordshire Egyptian Pound bypassing Lilangeni e-business Mount Fantastic quantify Home Loan Account forecast Central FTP Web Viaduct fresh-thinking Buckinghamshire quantifying holistic Handcrafted Fresh Gloves HTTP Web Nuevo Sol Refined Granite Cheese Tactics primary calculating SDD withdrawal Gorgeous Cotton Shoes Euro Credit Card Account Electronics Tasty Soft Shoes Generic Rubber Bacon portals",
                            CreationDate = new DateTime(2023, 6, 11, 18, 38, 43, 543, DateTimeKind.Local).AddTicks(562),
                            CreatorId = new Guid("78a7570f-3ce5-48ba-9461-80283ed1d94d"),
                            ImageUrl = "http://lorempixel.com/640/480/business",
                            Name = "bypassing",
                            Price = 475.94
                        },
                        new
                        {
                            Id = new Guid("af52575f-4414-e853-2ec5-acfebb2ebfc0"),
                            CityName = "East Jettie",
                            Content = "Steel Tanzania Secured Avon Usability Greece engage Home Loan Account fuchsia Viaduct back-end Divide Fantastic Wooden Pizza Plastic Danish Krone hard drive alarm bypass Triple-buffered Wyoming Nebraska Dynamic best-of-breed Licensed Wooden Sausages Rue Graphical User Interface indigo District Granite Human Division Oklahoma Functionality SDD Auto Loan Account Metal Springs Avon Refined Fresh Car Ergonomic Auto Loan Account SMS Small Fresh Gloves payment systematic Avon transmitting Home & Health responsive Savings Account synergistic Generic Wooden Soap index ability bypassing ubiquitous deposit Handmade technologies Shore",
                            CreationDate = new DateTime(2023, 6, 12, 4, 59, 15, 640, DateTimeKind.Local).AddTicks(2194),
                            CreatorId = new Guid("78a7570f-3ce5-48ba-9461-80283ed1d94d"),
                            ImageUrl = "http://lorempixel.com/640/480/fashion",
                            Name = "calculating",
                            Price = 259.31
                        },
                        new
                        {
                            Id = new Guid("76fb2f36-92f3-1731-6ff8-1ac6ec4dfafc"),
                            CityName = "Taureanberg",
                            Content = "experiences e-services Administrator Principal web-enabled Concrete grey indigo Libyan Arab Jamahiriya Ergonomic Timor-Leste 4th generation visionary Facilitator Zimbabwe Dollar Kroon reinvent RSS Prairie reboot Garden, Books & Kids Function-based white optical Small Wooden Tuna backing up salmon indexing action-items model Director Minnesota Guarani Administrator customized Metal deposit Bedfordshire payment Security Sleek Frozen Fish Junction metrics Synergistic SMTP parsing THX transmitting calculate Director Key Integration Handmade functionalities Unbranded Handmade Metal Pants Parks Digitized Station back-end",
                            CreationDate = new DateTime(2023, 6, 12, 12, 57, 8, 14, DateTimeKind.Local).AddTicks(944),
                            CreatorId = new Guid("78a7570f-3ce5-48ba-9461-80283ed1d94d"),
                            ImageUrl = "http://lorempixel.com/640/480/technics",
                            Name = "generate",
                            Price = 423.14999999999998
                        },
                        new
                        {
                            Id = new Guid("9d563065-d60a-882f-2306-cd285da60ec4"),
                            CityName = "Port Bobby",
                            Content = "Washington Kwanza Solutions Games & Kids Awesome Steel Shoes Buckinghamshire Central Trinidad and Tobago Dollar Business-focused deposit networks Fords Toys Iowa compress parse Human Developer matrices Central Administrator Investor functionalities iterate e-markets Customer Integration supply-chains Avenue Borders array Inlet project Tools, Health & Electronics Outdoors & Music extranet Costa Rican Colon out-of-the-box alarm Street Hawaii back up Home Loan Account withdrawal leverage Savings Account grow Villages invoice migration disintermediate Savings Account Streets 1080p communities Buckinghamshire Handcrafted Practical Designer convergence",
                            CreationDate = new DateTime(2023, 6, 11, 21, 47, 52, 110, DateTimeKind.Local).AddTicks(2310),
                            CreatorId = new Guid("78a7570f-3ce5-48ba-9461-80283ed1d94d"),
                            ImageUrl = "http://lorempixel.com/640/480/nightlife",
                            Name = "South Dakota",
                            Price = 77.5
                        },
                        new
                        {
                            Id = new Guid("f4786881-d662-f9fa-cabb-f9f2b1c4961a"),
                            CityName = "New Rodolfo",
                            Content = "synergies payment Generic optimize Horizontal end-to-end Row back up Investment Account Applications Sleek ubiquitous Incredible Plastic Sausages compress Small Soft Sausages Awesome Gorgeous Soft Computer Outdoors, Kids & Games quantify AGP Principal bus American Samoa Bedfordshire Steel compelling Aruban Guilder EXE Corners Manat Legacy extranet Principal interfaces networks Checking Account sky blue e-markets array Toys & Movies Customer Burgs Garden & Jewelery infomediaries parse Gibraltar Pound Cape frictionless composite Bedfordshire Nebraska navigating Generic Cotton Car Computers & Computers neural deposit invoice overriding networks paradigms",
                            CreationDate = new DateTime(2023, 6, 11, 20, 4, 13, 767, DateTimeKind.Local).AddTicks(2642),
                            CreatorId = new Guid("78a7570f-3ce5-48ba-9461-80283ed1d94d"),
                            ImageUrl = "http://lorempixel.com/640/480/cats",
                            Name = "cross-platform",
                            Price = 131.93000000000001
                        },
                        new
                        {
                            Id = new Guid("32b560a1-5266-48e8-c3f0-48c564450d4e"),
                            CityName = "Port Vena",
                            Content = "Parkways encryption JBOD Personal Loan Account Analyst success deposit Handmade Fresh Pizza Micronesia Incredible Rubber Computer HTTP Savings Account partnerships Rufiyaa Islands Checking Account Electronics, Toys & Outdoors Director Puerto Rico Oregon Music Ergonomic Mexican Peso Trafficway Technician evolve frictionless Connecticut leading edge Jewelery, Garden & Toys Accountability hack Shoes Unbranded Soft Shirt Small Outdoors & Baby AGP TCP Computers & Electronics Garden Fantastic Steel Sausages eyeballs Innovative turquoise compressing strategic Licensed hard drive solution-oriented optimize deposit Health, Sports & Outdoors Cambridgeshire Usability Credit Card Account Rhode Island Human Berkshire Afghani Orchestrator",
                            CreationDate = new DateTime(2023, 6, 11, 23, 16, 27, 902, DateTimeKind.Local).AddTicks(9455),
                            CreatorId = new Guid("78a7570f-3ce5-48ba-9461-80283ed1d94d"),
                            ImageUrl = "http://lorempixel.com/640/480/cats",
                            Name = "virtual",
                            Price = 895.60000000000002
                        },
                        new
                        {
                            Id = new Guid("fbd30bab-47e8-816a-ef66-dc791f134f8a"),
                            CityName = "Gloverhaven",
                            Content = "partnerships Automotive & Health instruction set metrics object-oriented disintermediate Object-based Bedfordshire iterate leading-edge Nebraska Re-contextualized AI Customer auxiliary Morocco Fantastic Steel Table Buckinghamshire Licensed Granite Chips Ohio Movies infrastructure success Buckinghamshire holistic sky blue Principal JSON optical SCSI clear-thinking Course Tasty Granite Fish Ergonomic Buckinghamshire index Intelligent transmitter Optimization Handmade Plastic Fish Underpass Tasty Concrete Pants Books & Kids Oregon auxiliary Generic Soft Hat Pataca Directives revolutionize Sleek Frozen Computer Data Malaysian Ringgit Sleek Fresh Cheese bluetooth South Dakota partnerships Refined Graphic Interface bus overriding",
                            CreationDate = new DateTime(2023, 6, 11, 23, 44, 25, 144, DateTimeKind.Local).AddTicks(3048),
                            CreatorId = new Guid("78a7570f-3ce5-48ba-9461-80283ed1d94d"),
                            ImageUrl = "http://lorempixel.com/640/480/cats",
                            Name = "aggregate",
                            Price = 77.930000000000007
                        },
                        new
                        {
                            Id = new Guid("1afbb368-a6a2-1ef4-24ad-48dfc29615f6"),
                            CityName = "South Mason",
                            Content = "payment JBOD Flats Trail Frozen Intelligent Granite Chicken THX Court invoice Lilangeni index Toys Synchronised schemas Romania Quality sensor brand web-readiness IB GB Regional Security Route HTTP Chile XML robust USB deposit Unbranded Wooden Keyboard Avon Hryvnia leading edge Direct evolve repurpose Designer haptic monetize high-level Bedfordshire Avon Berkshire white Ergonomic Metal Chips Refined Rubber Towels input Ergonomic Soft Sausages Handmade Wooden Shoes calculate global neural redundant Berkshire SDD copying Incredible Granite Pants Mississippi Vision-oriented",
                            CreationDate = new DateTime(2023, 6, 12, 10, 25, 23, 289, DateTimeKind.Local).AddTicks(7558),
                            CreatorId = new Guid("78a7570f-3ce5-48ba-9461-80283ed1d94d"),
                            ImageUrl = "http://lorempixel.com/640/480/business",
                            Name = "extensible",
                            Price = 133.58000000000001
                        },
                        new
                        {
                            Id = new Guid("854e9f97-7da8-2648-3c22-d8dff86f9746"),
                            CityName = "Lake Elisha",
                            Content = "Bedfordshire Triple-buffered e-tailers Handcrafted Soft Cheese Refined optimal Iowa maroon Bolivia payment Buckinghamshire Serbia Forint Stravenue Cambridgeshire incremental Virtual seize Lari lime Lao People's Democratic Republic Drive haptic Moroccan Dirham port Incredible Plastic Salad Profound knowledge base backing up zero administration Generic Borders Internal web-readiness Gorgeous calculating Avon directional Frozen well-modulated Codes specifically reserved for testing purposes Square parsing Kenya Universal North Dakota Steel Investment Account synthesize Generic Granite Computer back-end silver strategic Andorra Checking Account Cambridgeshire Generic parsing extend Road",
                            CreationDate = new DateTime(2023, 6, 12, 10, 10, 16, 536, DateTimeKind.Local).AddTicks(9521),
                            CreatorId = new Guid("78a7570f-3ce5-48ba-9461-80283ed1d94d"),
                            ImageUrl = "http://lorempixel.com/640/480/nature",
                            Name = "deposit",
                            Price = 576.02999999999997
                        },
                        new
                        {
                            Id = new Guid("84e567ef-3d7c-2d50-4c4c-562142047e7d"),
                            CityName = "East Artborough",
                            Content = "Australian Dollar Licensed Steel Chair complexity port withdrawal Light input Phased Awesome Steel Tuna navigate Dale Sleek Group Money Market Account mint green Dynamic content alarm Virtual Small Wooden Computer hard drive application deposit connecting relationships Trace Licensed Steel Chips application Technician Guinea-Bissau Isle innovate Solutions Port Nigeria Station Berkshire Savings Account Toys, Sports & Electronics capacitor encoding program Security full-range back-end Personal Loan Account withdrawal navigate program overriding green parsing Refined Metal Fish Michigan override Health & Music portals Netherlands Antilles pixel Credit Card Account",
                            CreationDate = new DateTime(2023, 6, 12, 0, 12, 57, 895, DateTimeKind.Local).AddTicks(5538),
                            CreatorId = new Guid("78a7570f-3ce5-48ba-9461-80283ed1d94d"),
                            ImageUrl = "http://lorempixel.com/640/480/nature",
                            Name = "quantify",
                            Price = 222.09999999999999
                        },
                        new
                        {
                            Id = new Guid("fc7d79e9-4ee4-5e11-7b0b-1a602e92e30d"),
                            CityName = "Lake Erich",
                            Content = "Switzerland enterprise Consultant card Legacy architectures Intelligent Rubber Ball schemas Cambridgeshire digital next generation data-warehouse ADP Rubber Gorgeous Plastic Bike Realigned Buckinghamshire feed New Hampshire Facilitator composite Down-sized Moldova firewall magnetic Secured Credit Card Account Infrastructure Object-based Moldova holistic Sierra Leone Branding SDR Village back up payment Station Handcrafted Aruban Guilder Sports & Electronics Polarised Illinois platforms Tunisia metrics generate Avon Buckinghamshire Checking Account Glens El Salvador Colon wireless Cotton cross-platform synthesize Licensed Frozen Shirt optimize Practical Rubber Gloves Money Market Account",
                            CreationDate = new DateTime(2023, 6, 11, 23, 3, 20, 315, DateTimeKind.Local).AddTicks(143),
                            CreatorId = new Guid("78a7570f-3ce5-48ba-9461-80283ed1d94d"),
                            ImageUrl = "http://lorempixel.com/640/480/city",
                            Name = "Fantastic Soft Pants",
                            Price = 881.52999999999997
                        },
                        new
                        {
                            Id = new Guid("2b25fc58-e952-2a50-9d58-5884f9b75b42"),
                            CityName = "North Stephania",
                            Content = "Lilangeni Views connecting ADP SMTP Clothing Front-line Bedfordshire protocol analyzing Rapid Graphical User Interface synergies knowledge user Engineer incubate Frozen Home Loan Account transmitting harness redundant Intranet Refined Metal Hat Metal Programmable Distributed pixel Buckinghamshire Savings Account value-added Savings Account SDD generating Tasty Granite Fish TCP programming parsing Extended Handcrafted Steel Towels Money Market Account program Licensed lime Soft Creative Villages Chief Face to face Human Investment Account Functionality Baby, Shoes & Outdoors technologies Auto Loan Account Strategist Norfolk Island bandwidth encryption Customer Administrator",
                            CreationDate = new DateTime(2023, 6, 11, 16, 54, 15, 579, DateTimeKind.Local).AddTicks(2884),
                            CreatorId = new Guid("78a7570f-3ce5-48ba-9461-80283ed1d94d"),
                            ImageUrl = "http://lorempixel.com/640/480/people",
                            Name = "Uruguay",
                            Price = 155.25999999999999
                        },
                        new
                        {
                            Id = new Guid("8cf8c5ca-51db-c2ea-405e-a29456391072"),
                            CityName = "Virginieburgh",
                            Content = "CSS index intangible blue user-centric COM collaboration Sleek bypassing synthesizing withdrawal Platinum USB Buckinghamshire Licensed Plastic Hat back-end Books Kiribati redundant Money Market Account bluetooth Forest Applications Vermont parse Strategist transmit users invoice markets olive Vermont Cotton Jordanian Dinar virtual SMTP District leverage Granite Road EXE SMS Customer Bhutanese Ngultrum deposit Costa Rica Incredible Buckinghamshire Soft facilitate multi-tasking Metal Canyon Rubber program Lek uniform Technician Adaptive Sleek Frozen Mouse",
                            CreationDate = new DateTime(2023, 6, 12, 10, 33, 36, 416, DateTimeKind.Local).AddTicks(230),
                            CreatorId = new Guid("78a7570f-3ce5-48ba-9461-80283ed1d94d"),
                            ImageUrl = "http://lorempixel.com/640/480/nature",
                            Name = "Awesome Frozen Mouse",
                            Price = 968.88999999999999
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NokoodAssignment.Domain.Entities.Reservation", b =>
                {
                    b.HasOne("NokoodAssignment.Domain.Entities.Trip", null)
                        .WithMany("Reservations")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NokoodAssignment.Domain.Entities.Trip", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
