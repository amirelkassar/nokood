// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NokoodAssignment.Persistence.DatabaseContext;

#nullable disable

namespace NokoodAssignment.Persistence.Migrations
{
    [DbContext(typeof(NokoodDBContext))]
    [Migration("20230612101213_TripSeedsUpdated")]
    partial class TripSeedsUpdated
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("NokoodAssignment.Domain.Entities.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TripId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("AppTB_Reservation", (string)null);
                });

            modelBuilder.Entity("NokoodAssignment.Domain.Entities.Trip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("AppTB_Trip", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("364b6ab4-c385-f5cc-0e68-033416a2bb16"),
                            CityName = "Eldonport",
                            Content = "Heard Island and McDonald Islands Licensed THX North Dakota Central Spurs Factors Engineer capacitor Lead indigo deliverables New Hampshire networks pixel Technician upward-trending 4th generation auxiliary Steel Cloned Alaska Games, Baby & Automotive silver Licensed Metal Salad installation optical Networked Buckinghamshire stable Wall systematic maroon Investment Account payment implement Lock streamline Gorgeous bypass Timor-Leste Ways firewall auxiliary RSS Assistant maroon impactful invoice Handcrafted Soft Chips circuit Estates Inlet Concrete Rubber Handcrafted Frozen Chair out-of-the-box Technician leverage Credit Card Account",
                            CreationDate = new DateTime(2023, 6, 12, 5, 52, 29, 757, DateTimeKind.Local).AddTicks(3727),
                            CreatorId = new Guid("78a7570f-3ce5-48ba-9461-80283ed1d94d"),
                            ImageUrl = "http://lorempixel.com/640/480/cats",
                            Name = "ability",
                            Price = 257.12
                        },
                        new
                        {
                            Id = new Guid("9efd84c2-6045-636b-1205-f6f5296d6b5e"),
                            CityName = "Littleside",
                            Content = "parsing Optimized Soft HDD aggregate Handmade Concrete Pizza Bedfordshire vortals deposit optimize Plastic Burundi SMS Functionality Gorgeous Fresh Computer Credit Card Account CSS Corporate synergy Cambridgeshire Future-proofed Borders e-tailers overriding experiences Radial AI withdrawal Austria auxiliary dot-com Sleek Plastic Chicken e-tailers Distributed Bouvet Island (Bouvetoya) Frozen reboot optical Checking Account tan mobile Object-based Iowa bus Junctions Forges bottom-line homogeneous transmitter Expressway withdrawal value-added Sleek Gorgeous Wooden Sausages Quality-focused tertiary Credit Card Account payment Skyway monetize",
                            CreationDate = new DateTime(2023, 6, 12, 0, 54, 34, 202, DateTimeKind.Local).AddTicks(708),
                            CreatorId = new Guid("78a7570f-3ce5-48ba-9461-80283ed1d94d"),
                            ImageUrl = "http://lorempixel.com/640/480/city",
                            Name = "XML",
                            Price = 318.29000000000002
                        },
                        new
                        {
                            Id = new Guid("8ab0371a-87dc-6bb7-2e67-cfcee7f27517"),
                            CityName = "North Aaliyahfort",
                            Content = "Savings Account Games, Movies & Baby copying Rhode Island Automotive, Garden & Kids Handmade Metal Tuna Electronics & Garden maroon Louisiana synthesizing Jersey AI Illinois Vista grey Tasty Corporate Balanced violet XSS Fantastic Plastic Chicken executive Operations Administrator blue HTTP Home & Beauty Investment Account client-server Creative Rest programming systemic open-source Avon New Mexico Central Fork Sports, Shoes & Games South Dakota Concrete Fantastic Unions North Carolina e-business Future-proofed SDD visionary multimedia Future-proofed driver Checking Account Buckinghamshire redefine Credit Card Account contextually-based FTP Tasty Concrete Shoes Baht Chief",
                            CreationDate = new DateTime(2023, 6, 11, 18, 39, 52, 197, DateTimeKind.Local).AddTicks(8706),
                            CreatorId = new Guid("78a7570f-3ce5-48ba-9461-80283ed1d94d"),
                            ImageUrl = "http://lorempixel.com/640/480/people",
                            Name = "Checking Account",
                            Price = 475.62
                        },
                        new
                        {
                            Id = new Guid("e56c0fd6-d348-8cc7-9086-62000926a424"),
                            CityName = "Faustoview",
                            Content = "Buckinghamshire Branch Central pricing structure Plastic Maryland Savings Account Savings Account Chilean Peso Bypass Sleek Fresh functionalities Decentralized Kuwait Sharable one-to-one multi-byte program Liaison Generic Steel Pizza Buckinghamshire Fantastic Handcrafted Soft Bacon Practical back-end networks invoice bandwidth Tasty firewall Refined Frozen Shoes View Well Cambridgeshire Serbian Dinar Monitored Metal USB Money Market Account Bond Markets Units European Composite Unit (EURCO) Practical Plastic Computer quantifying invoice Forint Neck quantify Representative California Metal Berkshire deposit Florida Director Security distributed green models Home Bedfordshire",
                            CreationDate = new DateTime(2023, 6, 12, 0, 37, 38, 434, DateTimeKind.Local).AddTicks(2030),
                            CreatorId = new Guid("78a7570f-3ce5-48ba-9461-80283ed1d94d"),
                            ImageUrl = "http://lorempixel.com/640/480/transport",
                            Name = "Falkland Islands Pound",
                            Price = 167.94999999999999
                        },
                        new
                        {
                            Id = new Guid("3a440876-3fe7-beac-9438-59b1f45e3dd0"),
                            CityName = "South Melyssa",
                            Content = "Paradigm EXE Shoes, Books & Kids Tasty Cotton Sausages Supervisor PNG synthesize Finland withdrawal e-services methodology knowledge user SSL Ramp payment Savings Account Awesome Rubber Cheese GB Small Soft Chair Garden & Music Glens Cliffs generate Ergonomic hacking National Progressive Graphic Interface functionalities Generic mindshare Investor withdrawal Enterprise-wide Quality-focused Games, Home & Outdoors Security override Practical Soft Shoes array Circles Principal partnerships Incredible Fresh Tuna technologies deposit bandwidth Handmade Rubber Salad Route sky blue wireless Bedfordshire haptic Quality Fresh leading-edge Rubber Operations indexing revolutionize",
                            CreationDate = new DateTime(2023, 6, 11, 22, 55, 38, 477, DateTimeKind.Local).AddTicks(310),
                            CreatorId = new Guid("78a7570f-3ce5-48ba-9461-80283ed1d94d"),
                            ImageUrl = "http://lorempixel.com/640/480/nightlife",
                            Name = "system",
                            Price = 151.09
                        },
                        new
                        {
                            Id = new Guid("ffc02a89-3075-01b7-cf7e-707c5802f9f0"),
                            CityName = "New Aliyahbury",
                            Content = "Montana bluetooth eyeballs withdrawal innovative SDR Specialist Turks and Caicos Islands Wall Licensed efficient Generic Cotton Shoes solutions Arkansas Refined Steel Shoes Home Loan Account Swedish Krona withdrawal black Frozen Way withdrawal enable Station Well Berkshire intangible interface Executive Buckinghamshire Arkansas Sleek Soft Soap Unbranded Buckinghamshire circuit Somali Shilling one-to-one solid state global Money Market Account back-end orange Down-sized Alaska Avon Expressway Legacy Stravenue compress Granite Squares Tunnel Gorgeous Concrete Table Avon open-source robust olive Green invoice deposit",
                            CreationDate = new DateTime(2023, 6, 12, 2, 35, 30, 862, DateTimeKind.Local).AddTicks(9859),
                            CreatorId = new Guid("78a7570f-3ce5-48ba-9461-80283ed1d94d"),
                            ImageUrl = "http://lorempixel.com/640/480/business",
                            Name = "Czech Koruna",
                            Price = 373.74000000000001
                        },
                        new
                        {
                            Id = new Guid("acd458e2-b4e3-5764-6503-e2388c937b66"),
                            CityName = "New Roxaneborough",
                            Content = "visualize Indiana Configurable object-oriented Small Concrete Towels Frozen bifurcated Unbranded Soft Shoes monetize Streamlined Tennessee programming Licensed Steel Bike Health Music & Garden Refined Rubber Keyboard Implemented Senior invoice Bahraini Dinar sexy Front-line Investment Account Analyst Intelligent Wooden parse Home & Toys Village e-markets Home Loan Account Gorgeous synthesize full-range Knoll Assimilated Intranet teal Home initiatives Saint Martin copying Nevada Intelligent needs-based Louisiana Bhutanese Ngultrum quantifying convergence empower generating Vietnam reboot relationships USB full-range e-markets moderator moratorium Kids, Toys & Tools",
                            CreationDate = new DateTime(2023, 6, 12, 0, 46, 39, 113, DateTimeKind.Local).AddTicks(2302),
                            CreatorId = new Guid("78a7570f-3ce5-48ba-9461-80283ed1d94d"),
                            ImageUrl = "http://lorempixel.com/640/480/animals",
                            Name = "Cotton",
                            Price = 1.96
                        },
                        new
                        {
                            Id = new Guid("add7394d-429c-bb40-ed9e-c4e61d61bf52"),
                            CityName = "Russelstad",
                            Content = "Berkshire SDD repurpose portal Rubber function Rustic Officer synthesizing Configuration Ergonomic Metal Pants copying Beauty PCI Music & Movies Fantastic Concrete Computer Director virtual Vatu Stravenue Trail Internal initiatives maximized monitor Developer Wooden parallelism Toys & Clothing payment Designer indigo Handmade Rubber Table Handcrafted Fresh Ball mobile Jamaica Designer deliverables Fantastic parsing Track parsing USB pink Generic Steel Sausages e-business Chief dynamic Garden Lead Guyana Dollar parsing Forward Incredible Home Loan Account database benchmark Andorra Integration Garden, Electronics & Health",
                            CreationDate = new DateTime(2023, 6, 12, 5, 54, 22, 260, DateTimeKind.Local).AddTicks(2026),
                            CreatorId = new Guid("78a7570f-3ce5-48ba-9461-80283ed1d94d"),
                            ImageUrl = "http://lorempixel.com/640/480/abstract",
                            Name = "Yemeni Rial",
                            Price = 595.22000000000003
                        },
                        new
                        {
                            Id = new Guid("203bc3f2-ad3d-b249-327f-51349be2c0c6"),
                            CityName = "Lavonnebury",
                            Content = "navigating multi-byte brand Tasty Plastic Fish Lead Vermont task-force Bulgaria payment Awesome Wooden Chips port THX Vista Cross-group European Unit of Account 9(E.U.A.-9) RSS French Guiana Cambridgeshire interface Light Guyana West Virginia synergies synthesize cross-media Applications Money Market Account payment Tasty Wooden Mouse payment Barbados Program directional Avon morph Supervisor Grocery & Home Comoros Intelligent Granite Bacon instruction set Alley partnerships Rustic Frozen Fish Dobra Accountability empowering generating TCP Credit Card Account Buckinghamshire connecting COM Zambia Lead RAM TCP Taka bus Cambridgeshire bluetooth",
                            CreationDate = new DateTime(2023, 6, 11, 21, 1, 0, 848, DateTimeKind.Local).AddTicks(3983),
                            CreatorId = new Guid("78a7570f-3ce5-48ba-9461-80283ed1d94d"),
                            ImageUrl = "http://lorempixel.com/640/480/sports",
                            Name = "sensor",
                            Price = 495.88999999999999
                        },
                        new
                        {
                            Id = new Guid("86fef317-218e-962a-8598-157d4a0fd57b"),
                            CityName = "Lake Trinitymouth",
                            Content = "Bypass mission-critical Saint Helena solutions Outdoors, Games & Jewelery Cambridgeshire XSS even-keeled Refined Home Loan Account Principal Belarussian Ruble Crescent Small grey extensible Analyst Avon Practical Wooden Bike solid state Sleek Soft Shirt Web Oregon Borders Granite cyan deposit Cross-platform Unbranded Rubber Shoes enhance platforms compress object-oriented ROI infrastructures USB Outdoors & Tools JSON Checking Account Implementation calculating Product Senior coherent Convertible Marks Gorgeous Plastic Tuna Checking Account Georgia Ville Buckinghamshire Tasty Soft Chicken Handmade Cotton Mouse Mount feed Cambridgeshire Sleek Granite Fish Quality Future Incredible Concrete Mouse Village",
                            CreationDate = new DateTime(2023, 6, 12, 5, 8, 47, 307, DateTimeKind.Local).AddTicks(9842),
                            CreatorId = new Guid("78a7570f-3ce5-48ba-9461-80283ed1d94d"),
                            ImageUrl = "http://lorempixel.com/640/480/city",
                            Name = "Direct",
                            Price = 566.61000000000001
                        },
                        new
                        {
                            Id = new Guid("b3426762-f995-81d2-95fb-4c16d136c3dd"),
                            CityName = "Lake Henryside",
                            Content = "Lithuanian Litas HDD override Fantastic Wooden Towels Associate Granite Security Saint Kitts and Nevis Computers Central connecting pixel Tasty Plastic Salad microchip transmit index program Connecticut killer Quality red mobile teal Idaho Grenada Forward Buckinghamshire Industrial, Movies & Industrial tan Plastic optimize Handmade Granite Ball seize deposit Borders Berkshire local area network virtual Mount digital Ergonomic Wooden Hat overriding cross-media back up Kids & Automotive Plastic Generic Cotton Mouse gold Credit Card Account compressing Wyoming parsing Configuration Cross-group Wallis and Futuna Bouvet Island (Bouvetoya) Tasty Shoes Communications Optional",
                            CreationDate = new DateTime(2023, 6, 12, 2, 32, 13, 734, DateTimeKind.Local).AddTicks(3881),
                            CreatorId = new Guid("78a7570f-3ce5-48ba-9461-80283ed1d94d"),
                            ImageUrl = "http://lorempixel.com/640/480/technics",
                            Name = "Micronesia",
                            Price = 47.0
                        },
                        new
                        {
                            Id = new Guid("dc7b03b1-d464-a408-891d-4c26e9b6a69c"),
                            CityName = "North Judd",
                            Content = "projection RAM deliverables Finland Azerbaijan Drives function Home Loan Account deposit next-generation override View groupware Checking Account connect Expanded Usability backing up compressing Summit multi-byte Hill Gorgeous Optimization generating functionalities Functionality Aruban Guilder Taka parsing FTP Toys, Shoes & Jewelery Summit Money Market Account cross-platform SMTP solutions exploit payment purple Papua New Guinea Proactive Sleek Steel Computer payment Moldovan Leu Unbranded Rubber Shoes Configuration Automotive, Grocery & Books Cote d'Ivoire invoice index Rubber Berkshire Investment Account wireless generate monitor methodical strategize Angola",
                            CreationDate = new DateTime(2023, 6, 11, 14, 19, 30, 694, DateTimeKind.Local).AddTicks(4143),
                            CreatorId = new Guid("78a7570f-3ce5-48ba-9461-80283ed1d94d"),
                            ImageUrl = "http://lorempixel.com/640/480/business",
                            Name = "Cotton",
                            Price = 814.64999999999998
                        },
                        new
                        {
                            Id = new Guid("afb76db1-086b-1cf2-3524-62e6456cbff3"),
                            CityName = "Stantonburgh",
                            Content = "Unbranded expedite Grocery mindshare synthesizing invoice orange North Dakota Metal quantifying online applications Frozen View Credit Card Account revolutionary Checking Account heuristic Generic Steel Soap gold SSL Integrated Technician Lari Horizontal Assistant Industrial & Garden Ergonomic Cambridgeshire Marketing Tools, Grocery & Music Strategist Books Licensed Plastic Bacon Turnpike Associate Ferry Money Market Account Regional Money Market Account payment violet Regional Dam Greenland Small Granite Computer Awesome indexing Incredible Legacy Configurable Louisiana Jewelery Expanded Passage digital bleeding-edge Keys red Rustic",
                            CreationDate = new DateTime(2023, 6, 12, 8, 53, 10, 989, DateTimeKind.Local).AddTicks(2520),
                            CreatorId = new Guid("78a7570f-3ce5-48ba-9461-80283ed1d94d"),
                            ImageUrl = "http://lorempixel.com/640/480/cats",
                            Name = "Baby, Games & Clothing",
                            Price = 317.48000000000002
                        },
                        new
                        {
                            Id = new Guid("ea0bc95a-54fa-e550-9a2b-6a21d0fe80f6"),
                            CityName = "Lake Doris",
                            Content = "strategic Israel Roads CFA Franc BCEAO overriding Rubber Drive compress iterate Technician matrices Creek monitor backing up West Virginia Avon superstructure value-added Incredible Implementation Refined Rubber Table Passage XSS SCSI deposit Stand-alone Cordoba Oro Micronesia EXE lime bus global Marketing disintermediate SMTP indexing Illinois Reunion invoice multi-byte Branch transmit payment Barbados Handmade Synchronised SMTP Steel Equatorial Guinea Practical Engineer Health Direct Malaysian Ringgit Awesome Steel Chips copy override withdrawal Mississippi Monitored",
                            CreationDate = new DateTime(2023, 6, 12, 12, 41, 19, 89, DateTimeKind.Local).AddTicks(6308),
                            CreatorId = new Guid("78a7570f-3ce5-48ba-9461-80283ed1d94d"),
                            ImageUrl = "http://lorempixel.com/640/480/nature",
                            Name = "Investment Account",
                            Price = 126.97
                        },
                        new
                        {
                            Id = new Guid("bccf1932-d54d-6f80-1548-b2fc7724ff9c"),
                            CityName = "Angelicahaven",
                            Content = "invoice Iowa Borders Awesome Tennessee quantify Borders platforms Future Indiana overriding Incredible purple initiatives Frozen Crossing Investment Account Computers & Computers override forecast payment customer loyalty Boliviano boliviano Groves deploy bifurcated Awesome connecting Granite iterate Credit Card Account multi-byte Supervisor grey Pound Sterling Personal Loan Account back-end Profit-focused Generic Granite Sausages extend white value-added Maryland Sleek Rubber Shirt heuristic radical black Creative Manager Michigan SQL HDD Cotton Networked withdrawal port salmon Games drive installation",
                            CreationDate = new DateTime(2023, 6, 12, 13, 10, 55, 836, DateTimeKind.Local).AddTicks(7672),
                            CreatorId = new Guid("78a7570f-3ce5-48ba-9461-80283ed1d94d"),
                            ImageUrl = "http://lorempixel.com/640/480/food",
                            Name = "withdrawal",
                            Price = 592.97000000000003
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NokoodAssignment.Domain.Entities.Reservation", b =>
                {
                    b.HasOne("NokoodAssignment.Domain.Entities.Trip", null)
                        .WithMany("Reservations")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NokoodAssignment.Domain.Entities.Trip", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
